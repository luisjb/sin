/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package load.file;

/**
 *
 * @author diego
 */
import com.ucod.lang.LocaleUtil;
import com.ucod.swingplus.ModalResult;
import com.ucod.util.SystemInfo;
import java.awt.Color;
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.GraphicsConfiguration;
import java.awt.Window;
import javax.swing.JDialog;
import javax.swing.plaf.FontUIResource;

public class MessageDialog extends JDialog {

    private static final Color WHITE = new Color(255, 255, 255);
    private static final Color LBLUE = new Color(45, 135, 239);

    private ModalResult firstBtnMR = ModalResult.CANCEL;
    private ModalResult secondBtnMR = ModalResult.OK;
    private ModalResult thirdBtnMR = ModalResult.YES;
    private ModalResult modalResult;
    private static final FontUIResource msgFont = new FontUIResource("Segoe UI Light", 0, 14);

    public MessageDialog() {
        this((Frame) null, false);
    }

    public MessageDialog(Frame owner) {
        this(owner, false);
    }

    public MessageDialog(Frame owner, boolean modal) {
        this(owner, "", modal);
    }

    public MessageDialog(Frame owner, String title) {
        this(owner, title, false);
    }

    public MessageDialog(Frame owner, String title, boolean modal) {
        super(owner, title, modal);
        init();
    }

    public MessageDialog(Frame owner, String title, boolean modal, GraphicsConfiguration gc) {
        super(owner, title, modal, gc);
        init();
    }

    public MessageDialog(Dialog owner) {
        this(owner, false);
    }

    public MessageDialog(Dialog owner, boolean modal) {
        this(owner, "", modal);
    }

    public MessageDialog(Dialog owner, String title) {
        this(owner, title, false);
    }

    public MessageDialog(Dialog owner, String title, boolean modal) {
        super(owner, title, modal);
        init();
    }

    public MessageDialog(Dialog owner, String title, boolean modal, GraphicsConfiguration gc) {
        super(owner, title, modal, gc);
        init();
    }

    public MessageDialog(Window owner) {
        this(owner, Dialog.ModalityType.MODELESS);
    }

    public MessageDialog(Window owner, Dialog.ModalityType modalityType) {
        this(owner, "", modalityType);
    }

    public MessageDialog(Window owner, String title) {
        this(owner, title, Dialog.ModalityType.MODELESS);
    }

    public MessageDialog(Window owner, String title, Dialog.ModalityType modalityType) {
        super(owner, title, modalityType);
        init();
    }

    public MessageDialog(Window owner, String title, Dialog.ModalityType modalityType, GraphicsConfiguration gc) {
        super(owner, title, modalityType, gc);
        init();
    }

    protected void init() {
        initComponents();

        if (SystemInfo.isUniformTranslucencySupported()) {
            setBackground(new Color(74, 74, 74, 50));
        }
        this.firstButton.setVisible(false);
        this.thirdButton.setVisible(false);
        this.modalResult = ModalResult.CANCEL;

        if (super.getTitle() != null) {
            this.titleLabel.setText(super.getTitle());
        } else {
            this.titleLabel.setText("");
        }

        this.msgTextPane.setFont(msgFont);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlsPane = new com.ucod.swingplus.TransparentPanel();
        titleLabel = new javax.swing.JLabel();
        msgScrollPane = new javax.swing.JScrollPane();
        msgTextPane = new javax.swing.JTextPane();
        jSeparator1 = new javax.swing.JSeparator();
        firstButton = new javax.swing.JButton();
        thirdButton = new javax.swing.JButton();
        secondButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setSize(new java.awt.Dimension(800, 480));

        controlsPane.setMinimumSize(new java.awt.Dimension(800, 480));

        titleLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        titleLabel.setText("jLabel1");
        titleLabel.setAlignmentX(0.5F);
        titleLabel.setPreferredSize(new java.awt.Dimension(775, 32));

        msgScrollPane.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        msgScrollPane.setOpaque(false);

        msgTextPane.setEditable(false);
        msgTextPane.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        msgTextPane.setOpaque(false);
        msgScrollPane.setViewportView(msgTextPane);

        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 173, 233)));
        jSeparator1.setMaximumSize(new java.awt.Dimension(200, 2));
        jSeparator1.setMinimumSize(new java.awt.Dimension(0, 2));
        jSeparator1.setPreferredSize(new java.awt.Dimension(50, 2));

        firstButton.setBackground(LBLUE);
        firstButton.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        firstButton.setForeground(WHITE
        );
        firstButton.setText("CANCELAR");
        firstButton.setFocusPainted(false);
        firstButton.setOpaque(true);
        firstButton.setPreferredSize(new java.awt.Dimension(100, 52));
        firstButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstButtonActionPerformed(evt);
            }
        });

        thirdButton.setBackground(LBLUE);
        thirdButton.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        thirdButton.setForeground(WHITE
        );
        thirdButton.setText("SI");
        thirdButton.setOpaque(true);
        thirdButton.setPreferredSize(new java.awt.Dimension(100, 52));
        thirdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thirdButtonActionPerformed(evt);
            }
        });

        secondButton.setBackground(LBLUE);
        secondButton.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        secondButton.setForeground(WHITE
        );
        secondButton.setText(LocaleUtil.getMessage("ACEPTAR"));
        secondButton.setFocusPainted(false);
        secondButton.setOpaque(true);
        secondButton.setPreferredSize(new java.awt.Dimension(100, 52));
        secondButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlsPaneLayout = new javax.swing.GroupLayout(controlsPane.getInnerPane());
        controlsPane.getInnerPane().setLayout(controlsPaneLayout);
        controlsPaneLayout.setHorizontalGroup(
            controlsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlsPaneLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(controlsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msgScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(controlsPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(thirdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(secondButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(firstButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        controlsPaneLayout.setVerticalGroup(
            controlsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlsPaneLayout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(msgScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(controlsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thirdButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        getContentPane().add(controlsPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void secondButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondButtonActionPerformed
        this.modalResult = this.secondBtnMR;
        setVisible(false);
    }//GEN-LAST:event_secondButtonActionPerformed

    private void firstButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstButtonActionPerformed
        this.modalResult = this.firstBtnMR;
        setVisible(false);
    }//GEN-LAST:event_firstButtonActionPerformed

    private void thirdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thirdButtonActionPerformed
        this.modalResult = this.thirdBtnMR;
        setVisible(false);
    }//GEN-LAST:event_thirdButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.ucod.swingplus.TransparentPanel controlsPane;
    private javax.swing.JButton firstButton;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JScrollPane msgScrollPane;
    private javax.swing.JTextPane msgTextPane;
    private javax.swing.JButton secondButton;
    private javax.swing.JButton thirdButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    public ModalResult getModalResult() {
        return this.modalResult;
    }

    public String getTitle() {
        return this.titleLabel.getText();
    }

    public void setTitle(String title) {
        this.titleLabel.setText(title);
    }

    public String getMessage() {
        return this.msgTextPane.getText();
    }

    public void setMessage(String text) {
        this.msgTextPane.setText(text);
    }

    public boolean firstButtonIsVisible() {
        return this.firstButton.isVisible();
    }

    public void setFirstButtonVisible(boolean aFlag) {
        this.firstButton.setVisible(aFlag);
    }

    public String getFirstButtonText(String text) {
        return this.firstButton.getText();
    }

    public void setFirstButtonText(String text) {
        this.firstButton.setText(text);
    }

    public ModalResult getFirstButtonModalResult() {
        return this.firstBtnMR;
    }

    public void setFirstButtonModalResult(ModalResult mr) {
        if (!this.firstBtnMR.equals(mr)) {
            ModalResult oldValue = this.firstBtnMR;
            this.firstBtnMR = mr;
            firePropertyChange("firstButtonModalResult", oldValue, mr);
        }
    }

    public Color getFirstButtonBackground() {
        return this.firstButton.getBackground();
    }

    public void setFirstButtonBackground(Color bg) {
        this.firstButton.setBackground(bg);
    }

    public Color getFirstButtonForeground() {
        return this.firstButton.getForeground();
    }

    public void setFirstButtonForeground(Color fg) {
        this.firstButton.setForeground(fg);
    }

    public boolean secondButtonIsVisible() {
        return this.secondButton.isVisible();
    }

    public void setSecondButtonVisible(boolean aFlag) {
        this.secondButton.setVisible(aFlag);
    }

    public String getSecondButtonText(String text) {
        return this.secondButton.getText();
    }

    public void setSecondButtonText(String text) {
        this.secondButton.setText(text);
    }

    public ModalResult getSecondButtonModalResult() {
        return this.secondBtnMR;
    }

    public void setSecondButtonModalResult(ModalResult mr) {
        if (!this.secondBtnMR.equals(mr)) {
            ModalResult oldValue = this.secondBtnMR;
            this.secondBtnMR = mr;
            firePropertyChange("secondButtonModalResult", oldValue, mr);
        }
    }

    public Color getSecondButtonBackground() {
        return this.secondButton.getBackground();
    }

    public void setSecondButtonBackground(Color bg) {
        this.secondButton.setBackground(bg);
    }

    public Color getSecondButtonForeground() {
        return this.secondButton.getForeground();
    }

    public void setSecondButtonForeground(Color fg) {
        this.secondButton.setForeground(fg);
    }

    public boolean thirdButtonIsVisible() {
        return this.thirdButton.isVisible();
    }

    public void setThirdButtonVisible(boolean aFlag) {
        this.thirdButton.setVisible(aFlag);
    }

    public String getThirdButtonText(String text) {
        return this.thirdButton.getText();
    }

    public void setThirdButtonText(String text) {
        this.thirdButton.setText(text);
    }

    public ModalResult getThirdButtonModalResult() {
        return this.thirdBtnMR;
    }

    public void setThirdButtonModalResult(ModalResult mr) {
        if (!this.thirdBtnMR.equals(mr)) {
            ModalResult oldValue = this.thirdBtnMR;
            this.thirdBtnMR = mr;
            firePropertyChange("thirdButtonModalResult", oldValue, mr);
        }
    }

    public Color getThirdButtonBackground() {
        return this.thirdButton.getBackground();
    }

    public void setThirdButtonBackground(Color bg) {
        this.thirdButton.setBackground(bg);
    }

    public Color getThirdButtonForeground() {
        return this.thirdButton.getForeground();
    }

    public void setThirdButtonForeground(Color fg) {
        this.thirdButton.setForeground(fg);
    }
}
